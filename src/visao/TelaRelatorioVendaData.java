/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import java.awt.Dimension;
import java.sql.Date;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import modelo.ConectaBanco;
import modelo.ModeloTabela;

/**
 *
 * @author Victor
 */
public class TelaRelatorioVendaData extends javax.swing.JInternalFrame {

    /**
     * Creates new form TelaRelatorioVendaData
     */
    
    public void setPosicao(){ //centraliza tela
        Dimension d = this.getDesktopPane().getSize();
        this.setLocation((d.width - this.getSize().width) /2, (d.height - this.getSize().height) /2);
    }
    
    ConectaBanco conex = new ConectaBanco();
    
    public TelaRelatorioVendaData() {
        initComponents();
        teste.setText("Detalhes Da Venda ID: ");
        limpatabela("select *from venda inner join itens_venda_produto "
                + "on venda.id_venda = itens_venda_produto.id_venda inner join produtos "
                + "on itens_venda_produto.id_produto = produtos.id_produto where venda.id_venda = '"+0+"'");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        botaopesquisa = new javax.swing.JButton();
        data = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaprodutos = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        teste = new javax.swing.JLabel();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Relatorio de Vendas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        botaopesquisa.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botaopesquisa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/magnifier.png"))); // NOI18N
        botaopesquisa.setText("Pesquisar");
        botaopesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaopesquisaActionPerformed(evt);
            }
        });

        try {
            data.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        data.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Vendas Realizadas:");

        tabela.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tabela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabela);

        tabelaprodutos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tabelaprodutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tabelaprodutos);

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cancel.png"))); // NOI18N
        jButton1.setText("Fechar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Data da Venda");

        teste.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        teste.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(teste, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(data, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botaopesquisa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 644, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 646, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(data, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaopesquisa)
                    .addComponent(jButton1)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(teste, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botaopesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaopesquisaActionPerformed
        teste.setText("Detalhes Da Venda ID: ");
        limpatabela("select *from venda inner join itens_venda_produto "
                + "on venda.id_venda = itens_venda_produto.id_venda inner join produtos "
                + "on itens_venda_produto.id_produto = produtos.id_produto where venda.id_venda = '"+0+"'");
        if(data.getText().equals("  /  /    ")){
            JOptionPane.showMessageDialog(rootPane, "Preencha data para pesquisar");
            data.requestFocus();
        }else{
            preencherTabela("select *from venda inner join clientes on venda.id_cliente = clientes.id_cliente "
                + "where data = '"+data.getText().replaceAll("/",".")+"' order by data");
        }
    }//GEN-LAST:event_botaopesquisaActionPerformed

    private void tabelaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaMouseClicked
        int cod = (int) tabela.getValueAt(tabela.getSelectedRow(), 0);
        preencherTabelaDetalhes("select *from venda inner join itens_venda_produto "
                + "on venda.id_venda = itens_venda_produto.id_venda inner join produtos "
                + "on itens_venda_produto.id_produto = produtos.id_produto where venda.id_venda = '"+cod+"'");
        teste.setText("Detalhes Da Venda ID: " +String.valueOf(cod));
    }//GEN-LAST:event_tabelaMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    public void preencherTabela(String Sql){
        ArrayList dados = new ArrayList();
        String [] colunas = new String []{"ID", "Data Venda", "Valor da Venda", "Cliente"};
        conex.conexao();
        conex.executaSql(Sql);
        try{
            conex.rs.first();
            do{
                Date data1 = conex.rs.getDate("data");
                SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
                String dataFormatada = formato.format(data1);
                dados.add(new Object[]{conex.rs.getInt("id_venda"),dataFormatada,
                    conex.rs.getFloat("valor_venda"),conex.rs.getString("nome_cliente")});
            }while(conex.rs.next());
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(rootPane,"Busque por outra data para preencher tabela\nNenhuma venda encontrada!");
        }
        ModeloTabela modelo = new ModeloTabela(dados, colunas);
        tabela.setModel(modelo);
        tabela.getColumnModel().getColumn(0).setPreferredWidth(59);
        tabela.getColumnModel().getColumn(0).setResizable(false);
        tabela.getColumnModel().getColumn(1).setPreferredWidth(100);
        tabela.getColumnModel().getColumn(1).setResizable(false);
        tabela.getColumnModel().getColumn(2).setPreferredWidth(120);
        tabela.getColumnModel().getColumn(2).setResizable(false);
        tabela.getColumnModel().getColumn(3).setPreferredWidth(359);
        tabela.getColumnModel().getColumn(3).setResizable(false);
        tabela.getTableHeader().setReorderingAllowed(false);
        tabela.setAutoResizeMode(tabela.AUTO_RESIZE_OFF);
        tabela.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        conex.desconecta();
    }
    
    public void limpatabela(String Sql){
        ArrayList dados = new ArrayList();
        String [] colunas = new String []{"Produtos", "Quantidade", "Valor Unit", "Valor Total"};
        conex.conexao();
        conex.executaSql(Sql);
        try{
            conex.rs.first();
            do{
                float valorProduto = conex.rs.getFloat("preco_produto");
                int qunatidadeVendida = conex.rs.getInt("quantidade");
                DecimalFormat df = new DecimalFormat("##.##");
                dados.add(new Object[]{conex.rs.getString("nome_produto"),conex.rs.getString("quantidade"), 
                    conex.rs.getString("preco_produto"), df.format(valorProduto*qunatidadeVendida)});
            }while(conex.rs.next());
        }catch(SQLException ex){
            
        }
        ModeloTabela modelo = new ModeloTabela(dados, colunas);
        tabelaprodutos.setModel(modelo);
        tabelaprodutos.getColumnModel().getColumn(0).setPreferredWidth(338);
        tabelaprodutos.getColumnModel().getColumn(0).setResizable(false);        
        tabelaprodutos.getColumnModel().getColumn(1).setPreferredWidth(100);
        tabelaprodutos.getColumnModel().getColumn(1).setResizable(false);
        tabelaprodutos.getColumnModel().getColumn(2).setPreferredWidth(100);
        tabelaprodutos.getColumnModel().getColumn(2).setResizable(false);        
        tabelaprodutos.getColumnModel().getColumn(3).setPreferredWidth(100);
        tabelaprodutos.getColumnModel().getColumn(3).setResizable(false);
        tabelaprodutos.getTableHeader().setReorderingAllowed(false);
        tabelaprodutos.setAutoResizeMode(tabelaprodutos.AUTO_RESIZE_OFF);
        tabelaprodutos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        conex.desconecta();
    }
    
    public void preencherTabelaDetalhes(String Sql){
        ArrayList dados = new ArrayList();
        String [] colunas = new String []{"Produtos", "Quantidade", "Valor Unit", "Valor Total"};
        conex.conexao();
        conex.executaSql(Sql);
        try{
            conex.rs.first();
            do{
                float valorProduto = conex.rs.getFloat("preco_produto");
                int qunatidadeVendida = conex.rs.getInt("quantidade");
                DecimalFormat df = new DecimalFormat("##.##");
                dados.add(new Object[]{conex.rs.getString("nome_produto"),conex.rs.getString("quantidade"), 
                    conex.rs.getString("preco_produto"), df.format(valorProduto*qunatidadeVendida)});
            }while(conex.rs.next());
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(rootPane,"Busque por outra data para preencher tabela"+ex);
        }
        ModeloTabela modelo = new ModeloTabela(dados, colunas);
        tabelaprodutos.setModel(modelo);
        tabelaprodutos.getColumnModel().getColumn(0).setPreferredWidth(338);
        tabelaprodutos.getColumnModel().getColumn(0).setResizable(false);        
        tabelaprodutos.getColumnModel().getColumn(1).setPreferredWidth(100);
        tabelaprodutos.getColumnModel().getColumn(1).setResizable(false);
        tabelaprodutos.getColumnModel().getColumn(2).setPreferredWidth(100);
        tabelaprodutos.getColumnModel().getColumn(2).setResizable(false);        
        tabelaprodutos.getColumnModel().getColumn(3).setPreferredWidth(100);
        tabelaprodutos.getColumnModel().getColumn(3).setResizable(false);
        tabelaprodutos.getTableHeader().setReorderingAllowed(false);
        tabelaprodutos.setAutoResizeMode(tabelaprodutos.AUTO_RESIZE_OFF);
        tabelaprodutos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        conex.desconecta();
    }
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaopesquisa;
    private javax.swing.JFormattedTextField data;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tabela;
    private javax.swing.JTable tabelaprodutos;
    private javax.swing.JLabel teste;
    // End of variables declaration//GEN-END:variables
}
